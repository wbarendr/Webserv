#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#

trap "pkill webserv > /dev/null 2>&1; make fclean ; exit 1" SIGHUP SIGINT SIGTERM
remote="$1"
url="$2"

make re config
./webserv ./conf/webserv.conf > /dev/null 2>&1 &
if !(pgrep webserv > /dev/null)
	then
		echo "FAILED"
		exit 1
fi
if !(python3 ./tests/test.py);
then
	pkill webserv > /dev/null 2>&1
	echo "FAILED"
	exit 1
fi

pkill webserv > /dev/null 2>&1 

./webserv ./conf/webserv_cmp.conf > /dev/null 2>&1 &
if !(pgrep webserv > /dev/null)
	then
		echo "FAILED"
		exit 1
fi
if !(python3 tests/compare_test/compare_test.py webserv)
then
	pkill webserv > /dev/null 2>&1
	echo "FAILED"
	exit 1
fi
pkill webserv > /dev/null 2>&1
# ./webserv ./conf/tester.conf

make fclean

echo "OK"
exit 0
