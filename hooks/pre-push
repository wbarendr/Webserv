#!/bin/bash

full=0
interactive=0
leaks=0
tester="./tests/tester"
[[ "$(uname)" == "Linux" ]] && tester="./tests/ubuntu_tester"
time=$(which time)
if [ $? -eq 0 ]
then
	time=""
fi

#when launched as a pre-push hook by git
# note: won't run 42 tester if FULL_HOOK is not exported in the calling shell
# export FULL_HOOK=[1-0] INTERACTIVE_HOOK=[1-0] to change that

[[ "$FULL_HOOK" == "1" ]] && full=1
[[ "$INTERACTIVE_HOOK" == "1" ]] && interactive=1
[[ "$LEAKS_HOOK" == "1" ]] && leaks=1

#when launched from cli
for arg in "$@"
do
	[[ "$arg" == "--full" ]] && full=1
	[[ "$arg" == "-i" ]] && interactive=1
	[[ "$arg" == "--leaks" ]] && leaks=1
done


function clean_exit() {
	pkill webserv > /dev/null 2>&1
	make fclean
	if [ $1 -eq 1 ]
	then
		echo "FAILED"
	 else
		echo "OK"
	fi
	exit $1
}

function assert() {
	if !($1)
	then
		[[ -n "$2" ]] && echo $2
		clean_exit 1
	fi
}

trap "clean_exit 1" SIGHUP SIGINT SIGTERM

assert "which python3" "please install python3"
assert "which php-cgi" "please install php-cgi"

make re LEAKS=$leaks config

./webserv ./conf/tester.conf > /dev/null 2>&1 &

sleep 1

if [ $full -eq 1 ]
then
	if [ $interactive -eq 1 ]
	then
		assert "$time $tester http://localhost:8080"
	else
		echo "" | assert "$time $tester http://localhost:8080"
	fi
fi

pkill webserv > /dev/null 2>&1
./webserv ./conf/webserv.conf > /dev/null 2>&1 &

sleep 1

assert "pgrep webserv"
assert "python3 ./tests/test.py"

pkill webserv > /dev/null 2>&1
./webserv ./conf/webserv_cmp.conf > /dev/null 2>&1 &

sleep 1
assert "pgrep webserv"
assert "python3 tests/compare_test/compare_test.py webserv"

pkill webserv > /dev/null 2>&1
./webserv ./conf/multi_name.conf > /dev/null 2>&1 &

sleep 1
assert "tests/multi_name.sh"

[[ $leaks == 1 ]] && if (ls leaks) then echo "leaks detected"; clean_exit 1; fi

clean_exit 0
